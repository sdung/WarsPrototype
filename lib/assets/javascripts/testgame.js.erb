// Initialize Phaser
var game = new Phaser.Game(320, 480, Phaser.AUTO, 'test_game_div');

//public vars
var bombSpeed;
var bombweight;
var score = 0;
var scoreText;

//initialize text styling for labels
var big_style = {
    font: "50px  Arial",
    fill: "#000000"
}

var style = {
    font: "25px Arial",
    fill: "#000000"
};


//created load state
var start_state = {
    preload: function(){
        this.game.stage.backgroundColor = 'FFFFFF';
        this.game.load.image('bomb', '<%= asset_path '10lbsBomb.png' %>');
    },

    create: function(){
        //create starting label on the screen

        welcome_label = game.add.text(game.width / 2, game.width / 3, 'Bomb Juggily', big_style);
        welcome_label.anchor.setTo(0.5, 0.5);

        label = game.add.text(game.width / 2, 300 , 'Click to Begin', style);
        label.anchor.setTo(0.5, 0.5);



    },

    update: function(){
        if (game.input.mousePointer.isDown)
            game.state.start('main');

    },

};

// Creates a new 'main' state that will contain the game
var main_state = {
    //added label 
    create: function () {
        //enable Physics
        game.physics.startSystem(Phaser.Physics.ARCADE);

        //create bomb sprite
        bomb = game.add.sprite(game.world.centerX - 50, game.world.centerY - 100, 'bomb');

        
        
        bomb.inputEnabled = true;


        //enable physics on the bomb
        game.physics.arcade.enable(bomb);

        //player physics properties
        bomb.body.bounce.y = 0.2;
        bomb.body.gravity.y = 1000;
        bomb.body.collideWorldBounds = true; 

        scoreText = game.add.text(16, 16, 'Score: 0', style);

    },

    newBomb: function(){
        bombs = game.add.group();

        //every 10 points add a new bomb
        if ((10 % score) == 0){
            var newbomb = bombs.create((100 + (Math.random * 300)), 250, 'newbomb');

            newbomb.body.gravity.y = 1000;

        }
    },

    update: function () {
        
         // If the bomb is out of the world (too high or too low), call the 'restart_game' function
        //if (bomb.body.collideWorldBounds = false);
         //   game.state.start('over');

         //when clicked 
        bomb.events.onInputDown.add(this.jump, this);
        newBomb();

    },

    // Make the bomb jump
    jump: function () {
        
        // Add a vertical velocity to the bomb
        bomb.body.velocity.y = -500;
        //bomb.body.velocity.x = 3 + Math.random() * 10;

        score++;
        scoreText.text = 'Score: ' + score;

    },

};

//creates game over state
var game_over_state = {
    //makes screen that sky blue color
    preload: function () {
        game.stage.backgroundColor = '#00FF00';
    },

    //added label
    create: function () {
         
    },

    update: function () {
        //checks if spacebar has been pressed if so start main game state (see bottom for game states)
       
    },

};

//game states
game.state.add('start', start_state);
game.state.add('main', main_state);
game.state.add('over', game_over_state);
game.state.start('start');




